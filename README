Introduction
------------
This was intended as an example of use mixing Ding and PAMI. However, it might be
useful as a tool to help you monitor/debug your asterisk installation, so I'm 
making it freely available.

See this article for more information: http://marcelog.github.com/articles/php_asterisk_listener_example_using_pami_and_ding.html

AsterTrace is extendable via "listeners". Currently these listeners exist:
* dial
* event
* dtmf
* varset
* newchannel

So currently, AsterTrace can monitor:
* All events (event-listener)
* Call activity (CDR like) (dial-listener)
* DTMF's pressed (dtmf-listener)
* VarSet's  (varset-listener)
* Newchannel (newchannel-listener)

Each listener is autosufficient, and get called by the container (Ding) whenever an
interesting event occurs. Ding will get called by the pami helper, whenever AMI reports
an event. This event will then get dispatched to the listeners by ding.

Requirements
------------
* PHP 5.3+
* Ding 0.97+ (http://marcelog.github.com/Ding)
* PAMI 1.27+ (http://marcelog.github.com/Ding)
* mysql server
* log4php (optional)
* pdo-mysql

Configuration
-------------
Assuming you are inside the root directory of the source (thus, having ./conf and ./src)

1.- Copy/Rename the file: conf/log4php.properties.example to log4php.properties. Edit it.
2.- Copy/Rename the file: conf/mysql.properties.example to mysql.properties. Edit it. The only
thing you need from mysql, is to have the database created (nothing else, no tables,
AsterTrace will create them on demand).
3.- Copy/Rename the file: conf/php.properties.example to php.properties. Edit it. You can have
your own php settings here.
4.- Copy/Rename the file: conf/astertrace.properties.example to astertrace.properties. Edit it.
5.- Run astertrace, like "php src/mg/AsterTrace/bin/astertrace.php ./conf"
